[
  {
    "objectID": "presentation-restatis.html#was-ist-restatis-und-was-bringt-es-mit",
    "href": "presentation-restatis.html#was-ist-restatis-und-was-bringt-es-mit",
    "title": "{restatis}",
    "section": "Was ist {restatis} und was bringt es mit?",
    "text": "Was ist {restatis} und was bringt es mit?\n\n\n\nDas Paket\n\nAPI-Wrapper für:\n\nGENESIS (StBA-Datenbank)\nZensusdatenbank  (Zensus 2022)\nwww.regionalstatistik.de\n\nEntwickelt als Projekt  von CorrelAid\n\nKeine Zugehörigkeit zum StBA  oder dem Statistischen Verbund!\nErste Version 2023, Update 2024\n\n\n\nFeatures\n\nDurchsuche Datenbanken nach:\n\nTabellen & Cubes  (inkl. EVAS-Codes)\nMetadaten, Variablen, Werte, etc.\n\nDatendownload  (Tabellen, Cubes)\nWeitere Informationen abrufbar  (z.B. Qualitätskennzeichen)\nCaching von API-Calls  mit memoise\n\nR-Session neu starten für Reset"
  },
  {
    "objectID": "presentation-restatis.html#installation",
    "href": "presentation-restatis.html#installation",
    "title": "{restatis}",
    "section": "Installation",
    "text": "Installation\n\n\nInstallation über CRAN:\n\n\n# CRAN-Veröffentlichung\ninstall.packages(\"restatis\")\n\n\n\nEntwicklungsversion über GitHub-Repository\n\n\n# Development-Version\nremotes::install_github(\"CorrelAid/restatis\")"
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel",
    "href": "presentation-restatis.html#anwendungsbeispiel",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nSzenario: Wir sollen eine Analyse zum Thema “Heizungsarten” durchführen, basierend auf der Gebäude- und Wohnungszählung (GWZ) und nutzen hierfür die Zensusdatenbank\nWir suchen nach Objekten in der Zensusdatenbank zum Thema “Heizung” und ziehen aus der Ergebnis-Liste nur die Tabellen\n\n\nrestatis::gen_find(term = \"Heizung\", \n                   database = \"zensus\", \n                   verbose = FALSE) %&gt;% \n  magrittr::extract2(\"Tables\") %&gt;% # restatis liefert Ergebnisse i.d.R. als Listen\n  head(2) # Nur ein Auszug aus 49 Tabellen\n\n# A tibble: 2 × 3\n  Code       Content                            Object_Type\n  &lt;chr&gt;      &lt;chr&gt;                              &lt;chr&gt;      \n1 3000G-1008 Gebäude: Energieträger der Heizung table      \n2 3000G-1011 Gebäude: Heizungsart               table"
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-1",
    "href": "presentation-restatis.html#anwendungsbeispiel-1",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nAlternativ: Suche über die gen_catalogue()-Funktion, Voraussetzung: Kenntnisse zu Statistik-Codes\nBsp.: Gebäude-Daten beginnen mit 3\n\n\ncatalogue &lt;- restatis::gen_catalogue(\"3*\", \n                                     database = \"zensus\", verbose = FALSE)\n\nprint(head(catalogue$Tables$`3 - Wohnen, Umwelt`, 7))\n\n# A tibble: 7 × 3\n  Code       Content                                Object_Type\n  &lt;chr&gt;      &lt;chr&gt;                                  &lt;chr&gt;      \n1 3000G-1001 Gebäude: Art des Gebäudes              table      \n2 3000G-1002 Gebäude: Baujahr (Jahrzehnte)          table      \n3 3000G-1003 Gebäude: Baujahr (Jahrzwanzigste)      table      \n4 3000G-1004 Gebäude: Baujahr (Mikrozensus-Klassen) table      \n5 3000G-1005 Gebäude: Baujahr (Jahresschritte)      table      \n6 3000G-1006 Gebäude: Baujahr (Zweijahresschritte)  table      \n7 3000G-1007 Gebäude: Eigentumsform des Gebäudes    table"
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-2",
    "href": "presentation-restatis.html#anwendungsbeispiel-2",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nNun wollen wir eine der Tabellen herunterladen (Gemeindeebene),  hierfür nutzen wir den Code der Tabelle\n\n\nheizung &lt;- restatis::gen_table(name = \"3000G-1008\", \n                               database = \"zensus\")\n\nhead(heizung, 4)\n\n# A tibble: 4 × 17\n  statistics_code statistics_label  time_code time_label time  `1_variable_code`\n  &lt;chr&gt;           &lt;chr&gt;             &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;            \n1 3000G           Buildings (terri… STAG      Reference… 2022… GEODL1           \n2 3000G           Buildings (terri… STAG      Reference… 2022… GEODL1           \n3 3000G           Buildings (terri… STAG      Reference… 2022… GEODL1           \n4 3000G           Buildings (terri… STAG      Reference… 2022… GEODL1           \n# ℹ 11 more variables: `1_variable_label` &lt;chr&gt;,\n#   `1_variable_attribute_code` &lt;chr&gt;, `1_variable_attribute_label` &lt;chr&gt;,\n#   `2_variable_code` &lt;chr&gt;, `2_variable_label` &lt;chr&gt;,\n#   `2_variable_attribute_code` &lt;chr&gt;, `2_variable_attribute_label` &lt;chr&gt;,\n#   value &lt;chr&gt;, value_unit &lt;chr&gt;, value_variable_code &lt;chr&gt;,\n#   value_variable_label &lt;chr&gt;\n\n\n\nDas wollen wir nicht - es sind Daten für ganz Deutschland. Aber es scheint eine Variable mit Geo-Bezug zu geben (GEODL1)"
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-3",
    "href": "presentation-restatis.html#anwendungsbeispiel-3",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nAlso müssen wir sehen, welche weiteren Variablen wir noch für die Statistik (3000G) wählen können\n\n\nheiz_vars &lt;- restatis::gen_var2stat(code = \"3000G\", \n                                    database = \"zensus\", \n                                    verbose = FALSE)\n\nheiz_vars$Variables[11:16,]\n\n# A tibble: 6 × 3\n  Code   Content                                      Object_Type\n  &lt;chr&gt;  &lt;chr&gt;                                        &lt;chr&gt;      \n1 GEOBL1 Bundesländer                                 Variable   \n2 GEOBZ1 Bezirke (Hamburg und Berlin)                 Variable   \n3 GEODL1 Deutschland                                  Variable   \n4 GEOGM4 Gemeinden (Gebietsstand 15.05.2022)          Variable   \n5 GEOLK4 Landkreise u. krsfr. Städte (Stand 15.05.22) Variable   \n6 GEORB1 Regierungsbezirke/Statistische Regionen      Variable"
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-4",
    "href": "presentation-restatis.html#anwendungsbeispiel-4",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nGEOGM4 ist die Variable, die wir gesucht haben\nAlso nutzen wir sie über den Parameter regionalvariable\n\n\nheizung &lt;- restatis::gen_table(\"3000G-1008\", \n                               database = \"zensus\", \n                               regionalvariable = \"GEOGM4\",\n                               language = \"de\")\n\nhead(heizung[,9:17])\n\n# A tibble: 6 × 9\n  `1_variable_attribute_label` `2_variable_code` `2_variable_label`       \n  &lt;chr&gt;                        &lt;chr&gt;             &lt;chr&gt;                    \n1 Herborn                      GEBEN1            Energieträger der Heizung\n2 Herborn                      GEBEN1            Energieträger der Heizung\n3 Schönau a.Königssee          GEBEN1            Energieträger der Heizung\n4 Schönau a.Königssee          GEBEN1            Energieträger der Heizung\n5 Elterlein, Stadt             GEBEN1            Energieträger der Heizung\n6 Elterlein, Stadt             GEBEN1            Energieträger der Heizung\n# ℹ 6 more variables: `2_variable_attribute_code` &lt;chr&gt;,\n#   `2_variable_attribute_label` &lt;chr&gt;, value &lt;chr&gt;, value_unit &lt;chr&gt;,\n#   value_variable_code &lt;chr&gt;, value_variable_label &lt;chr&gt;"
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-5",
    "href": "presentation-restatis.html#anwendungsbeispiel-5",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nNun kennen wir die Tabelle, die wir möchten\nAber welche Informationen gibt es zu ihr?\n\n\nmetadata_table &lt;- gen_metadata(\"3000G-1011\", \n                               database = \"zensus\", category = \"table\", verbose = FALSE)\n\nprint(metadata_table$Structure$Rows)\n\n     Code     Content       Type      Updated     \n[1,] \"HZGAT1\" \"Heizungsart\" \"Merkmal\" \"see parent\"\n\nmetadata_variable &lt;- gen_metadata(\"HZGAT1\", \n                                  database = \"zensus\", category = \"variable\", verbose = FALSE)\n\nprint(metadata_variable$General)\n\n     Code     Content       Values Type      \n[1,] \"HZGAT1\" \"Heizungsart\" \"6\"    \"sachlich\"\n\nprint(metadata_variable$Information)\n\n[1] \"wiki\\nDas Merkmal bezeichnet die überwiegende Heizungsart im \\nGebäude.\""
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-6",
    "href": "presentation-restatis.html#anwendungsbeispiel-6",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel",
    "text": "Anwendungsbeispiel\n\nUm die prozentualen Anteile der Energieträger pro Gemeinde zu bekommen, sind noch einige Verarbeitungen notwendig\n\n\nheizung_filter &lt;- heizung %&gt;% \n                    filter(`2_variable_attribute_label` != \"Insgesamt\" & \n                           value_unit == \"%\") %&gt;% \n                    group_by(`1_variable_attribute_code`) %&gt;% \n                    slice_max(value, with_ties = FALSE) %&gt;% \n                    ungroup()\n\nunique(heizung_filter$`2_variable_attribute_label`)\n\n[1] \"Fernwärme (verschiedene Energieträger)\"\n[2] \"Heizöl\"                                \n[3] \"Gas\"                                   \n[4] \"Holz, Holzpellets\"                     \n[5] \"Solar-/Geothermie, Wärmepumpen\"        \n[6] \"Kein Energieträger (keine Heizung)\"    \n[7] \"Strom (ohne Wärmepumpe)\"               \n[8] \"Biomasse (ohne Holz), Biogas\"          \n[9] \"Kohle\""
  },
  {
    "objectID": "presentation-restatis.html#anwendungsbeispiel-ergebnis",
    "href": "presentation-restatis.html#anwendungsbeispiel-ergebnis",
    "title": "{restatis}",
    "section": "Anwendungsbeispiel: Ergebnis",
    "text": "Anwendungsbeispiel: Ergebnis"
  },
  {
    "objectID": "presentation-restatis.html#authentifizierung",
    "href": "presentation-restatis.html#authentifizierung",
    "title": "{restatis}",
    "section": "Authentifizierung",
    "text": "Authentifizierung\n\nAlle drei APIs benötigen Nutzeraccounts\nVerschiedene Funktionen zur “Anmeldung”\n\nrestatis::gen_auth_save(): Speichere Zugangsdaten\nrestatis::gen_auth_get(): Lese Zugangsdaten aus\nrestatis::gen_logincheck(): Teste, ob Login funktioniert\n\nAlle Funktionen können für alle APIs genutzt werden,  für Teile von ihnen oder für nur eine\nZugangsdaten werden lokal in einer verschlüsselten .rds-Datei gespeichert\nSchlüssel dazu wird in .Renviron gespeichert\nZensusdatenbank akzeptiert auch API-Token"
  },
  {
    "objectID": "presentation-restatis.html#sonstige-funktionalität-datendownload",
    "href": "presentation-restatis.html#sonstige-funktionalität-datendownload",
    "title": "{restatis}",
    "section": "Sonstige Funktionalität: Datendownload",
    "text": "Sonstige Funktionalität: Datendownload\n\n{restatis} bietet weitere Funktionen für den Datendownload:\n\ngen_cube(): Download von sogenannten Datenquadern, gibt es nur bei GENESIS und regionalstatistik.de, nicht beim Zensus 2022\ngen_list_jobs(): Liste mit aktiven und fertiggestellten “Jobs”, die erstellt werden, wenn Tabellen zu groß für den direkten Download sind (“Jobs” gibt es auch nur bei GENESIS und www.regionalstatistik.de)\ngen_download_job(): Download von fertiggestellten “Jobs”\n\nBeispiel:\n\n\n# Diese Anfrage ist zu groß =&gt; Parameter job = TRUE ist nötig\nlarge_request &lt;- restatis::gen_table(\"31111-01-02-4\", database = \"regio\")\n\nError: You have requested a table too big for simple download. \nConsider making a range of smaller requests or use the \noption to create a job by setting the 'job' parameter \nof 'gen_table()' to TRUE. You can then download the job \nlater (use the function 'gen_list_jobs()' to check its status).\n\n# large_request &lt;- restatis::gen_table(\"31111-01-02-4\", database = \"regio\", job = TRUE)"
  },
  {
    "objectID": "presentation-restatis.html#sonstige-funktionalität",
    "href": "presentation-restatis.html#sonstige-funktionalität",
    "title": "{restatis}",
    "section": "Sonstige Funktionalität",
    "text": "Sonstige Funktionalität\n\nDaten & Metadaten finden\n\ngen_objects2stat(): Finde Objekte zu einer Statistik\ngen_objects2var(): Finde Objekte zu einer Variablen\ngen_val2var(): Extrahiere mögliche Werte einer Variablen\ngen_val2var2stat(): Finde Werte einer Variable zu einer Statistik\ngen_search_vars(): Suche spezifische Variablen\n\nHilfsfunktionen\n\ngen_modified_data(): Suche nach Updates, Änderungen oder neuen Objekten anhand eines spezifischen Datums\ngen_alternative_terms(): Finde Suchbegriffe, die ähnlich oder verwandt sind zueinander (Schreibweise)\ngen_signs(): Funktion, alle aktuellen Qualitätskennzeichen und deren Bedeutung aufzulisten (z.B., 0, *, X, (), p, …)\ngen_update_evas(): Funktion, um die aktuellen EVAS-Nummern von der EVAS-Seite zu scrapen"
  },
  {
    "objectID": "presentation-restatis.html#schwesterpaket-pystatis",
    "href": "presentation-restatis.html#schwesterpaket-pystatis",
    "title": "{restatis}",
    "section": "Schwesterpaket ‘pystatis’",
    "text": "Schwesterpaket ‘pystatis’\n\n\n{restatis} verfügt über ein Python-Schwesterpaket\npystatis ist auf PyPI zu finden\nFunktionalität grundsätzlich relativ ähnlich\nUnterstützt ebenfalls alle drei Datenbanken\nDie Entwicklungsversion ist auf GitHub zu finden"
  },
  {
    "objectID": "presentation-restatis.html#danke1",
    "href": "presentation-restatis.html#danke1",
    "title": "{restatis}",
    "section": "Danke!1",
    "text": "Danke!1\n\n\n{restatis} ist ein Open-Source-Projekt\nNoch kein stabiler Release (Version 0.2.0)\nBitte rege benutzen und Rückmeldung geben\nAm besten über GitHub\nNächste Schritte u.a.:\n\nUmstellung von Zensusdatenbank und GENESIS zu POST (statt GET)\n\n\nKontakt: yannik.buhl /at/ destatis.de oder yannikbuhl (GitHub)\n\n\n\n\n\n\nDiese Präsentation ist erstellt mit Quarto und basiert auf einer Vorlage von Mine Cetinkaya-Rundel; Schriftart: Fira Code Medium."
  }
]