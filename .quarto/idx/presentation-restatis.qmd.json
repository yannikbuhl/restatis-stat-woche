{"title":"{restatis}","markdown":{"yaml":{"title":"{restatis}","subtitle":"Ein Softwarepaket für R zur Arbeit mit Zensusdatenbank, GENESIS und regionalstatistik.de","author":"Yannik Buhl, Statistisches Bundesamt","institute":"Statistische Woche 2024, Regensburg","format":{"revealjs":{"multiplex":true,"theme":["pp.scss"],"slide-number":"c/t","fontcolor":"#262d36","highlight-style":"ayu-mirage","height":900,"width":1600}},"include-in-header":[{"text":"<style type=\"text/css\">\nul li ul li {\n  font-size: 0.8em;\n}\n\n.figure {\nmargin: 0 !important;\n}\n\n</style>\n"}]},"headingText":"Was ist `{restatis}` und was bringt es mit?","containsRefs":false,"markdown":"\n\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n### Das Paket\n\n-   API-Wrapper für:\n    -   GENESIS (StBA-Datenbank)\n    -   Zensusdatenbank <br> (Zensus 2022)\n    -   www.regionalstatistik.de\n-   Entwickelt als Projekt <br> von [CorrelAid](www.correlaid.org)\n    -   Keine Zugehörigkeit zum StBA <br> oder dem Statistischen Verbund!\n    -   Erste Version 2023,<br> Update 2024\n:::\n\n::: {.column width=\"50%\"}\n### Features\n\n-   Durchsuche Datenbanken nach:\n\n    -   Tabellen & Cubes <br> (inkl. EVAS-Codes)\n    -   Metadaten, Variablen, Werte, etc.\n\n-   Datendownload <br> (Tabellen, Cubes)\n\n-   Weitere Informationen abrufbar <br> (z.B. Qualitätskennzeichen)\n\n-   Caching von API-Calls <br> mit `memoise`\n\n    -   R-Session neu starten für Reset\n:::\n:::\n\n## Installation\n\n<br>\n\n-   Installation über CRAN:\n\n```{r eval=FALSE, echo=TRUE}\n\n# CRAN-Veröffentlichung\ninstall.packages(\"restatis\")\n```\n\n<br>\n\n-   Entwicklungsversion über GitHub-Repository\n\n```{r eval=FALSE, echo=TRUE}\n# Development-Version\nremotes::install_github(\"CorrelAid/restatis\")\n```\n\n## Anwendungsbeispiel\n\n```{r echo=FALSE}\nlibrary(pacman)\npacman::p_load(dplyr, restatis, sf, ggplot2, lubridate, microplot, Cairo)\n```\n\n-   Szenario: Wir sollen eine Analyse zum Thema \"Heizungsarten\" durchführen, basierend auf der Gebäude- und Wohnungszählung (GWZ) und nutzen hierfür die Zensusdatenbank\n-   Wir suchen nach Objekten in der Zensusdatenbank zum Thema \"Heizung\" und ziehen aus der Ergebnis-Liste nur die Tabellen\n\n```{r echo=TRUE, cache=TRUE}\nrestatis::gen_find(term = \"Heizung\", \n                   database = \"zensus\", \n                   verbose = FALSE) %>% \n  magrittr::extract2(\"Tables\") %>% # restatis liefert Ergebnisse i.d.R. als Listen\n  head(2) # Nur ein Auszug aus 49 Tabellen\n\n```\n\n## Anwendungsbeispiel\n\n-   Alternativ: Suche über die `gen_catalogue()`-Funktion, Voraussetzung: Kenntnisse zu Statistik-Codes\n-   Bsp.: Gebäude-Daten beginnen mit **3**\n\n```{r eval=TRUE, echo=TRUE, cache=TRUE}\ncatalogue <- restatis::gen_catalogue(\"3*\", \n                                     database = \"zensus\", verbose = FALSE)\n\nprint(head(catalogue$Tables$`3 - Wohnen, Umwelt`, 7))\n\n```\n\n## Anwendungsbeispiel\n\n-   Nun wollen wir eine der Tabellen herunterladen (Gemeindeebene), <br> hierfür nutzen wir den `Code` der Tabelle\n\n```{r echo=TRUE, cache=TRUE}\nheizung <- restatis::gen_table(name = \"3000G-1008\", \n                               database = \"zensus\")\n\nhead(heizung, 4)\n```\n\n-   Das wollen wir nicht - es sind Daten für ganz Deutschland. Aber es scheint eine Variable mit Geo-Bezug zu geben (`GEODL1`)\n\n## Anwendungsbeispiel\n\n-   Also müssen wir sehen, welche weiteren Variablen wir noch für die Statistik (`3000G`) wählen können\n\n```{r echo=TRUE}\nheiz_vars <- restatis::gen_var2stat(code = \"3000G\", \n                                    database = \"zensus\", \n                                    verbose = FALSE)\n\nheiz_vars$Variables[11:16,]\n```\n\n## Anwendungsbeispiel\n\n-   `GEOGM4` ist die Variable, die wir gesucht haben\n-   Also nutzen wir sie über den Parameter `regionalvariable`\n\n```{r echo=TRUE, cache=TRUE}\nheizung <- restatis::gen_table(\"3000G-1008\", \n                               database = \"zensus\", \n                               regionalvariable = \"GEOGM4\",\n                               language = \"de\")\n\nhead(heizung[,9:17])\n```\n\n## Anwendungsbeispiel\n\n-   Nun kennen wir die Tabelle, die wir möchten\n-   Aber welche Informationen gibt es zu ihr?\n\n```{r echo=TRUE, eval=TRUE, cache=TRUE}\nmetadata_table <- gen_metadata(\"3000G-1011\", \n                               database = \"zensus\", category = \"table\", verbose = FALSE)\n\nprint(metadata_table$Structure$Rows)\n\nmetadata_variable <- gen_metadata(\"HZGAT1\", \n                                  database = \"zensus\", category = \"variable\", verbose = FALSE)\n\nprint(metadata_variable$General)\nprint(metadata_variable$Information)\n\n```\n\n## Anwendungsbeispiel\n\n-   Um die prozentualen Anteile der Energieträger pro Gemeinde zu bekommen, sind noch einige Verarbeitungen notwendig\n\n```{r echo=TRUE}\nheizung_filter <- heizung %>% \n                    filter(`2_variable_attribute_label` != \"Insgesamt\" & \n                           value_unit == \"%\") %>% \n                    group_by(`1_variable_attribute_code`) %>% \n                    slice_max(value, with_ties = FALSE) %>% \n                    ungroup()\n\nunique(heizung_filter$`2_variable_attribute_label`)\n\n```\n\n## Anwendungsbeispiel: Ergebnis\n\n```{r echo=FALSE, eval=TRUE, cache=TRUE}\nshp <- sf::read_sf(\"data/Shapefile_Zensus2022/EPSG_25832/VG250_GEM.shp\") %>% \n        filter(BEZ != \"Gemeindefreies Gebiet\")\n\ndf <- right_join(shp, heizung_filter,\n                 by = c(\"ARS\" = \"1_variable_attribute_code\")) %>% \n        group_by(ARS) %>% \n        slice_max(lubridate::as_date(BEGINN), with_ties = FALSE) %>% \n        ungroup()\n```\n\n```{r de_karte, eval=TRUE, dpi=1000, fig.format='CairoPNG'}\nggplot(df) +\n  geom_sf(aes(fill = `2_variable_attribute_label`)) +\n  theme_collapse() +\n  labs(title = \"Vorherrschender Energieträger pro Gemeinde\",\n       subtitle = \"Quelle: Zensus 2022\",\n       fill = \"Energieträger\") + \n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks.length = unit(0, \"pt\"), #length of tick marks\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#fff2cc\"), \n        plot.margin = margin(t = 5, l = 5, r = 0, b = 0, unit = \"mm\")) \n\n```\n\n## Authentifizierung\n\n-   Alle drei APIs benötigen Nutzeraccounts\n-   Verschiedene Funktionen zur \"Anmeldung\"\n    -   `restatis::gen_auth_save()`: Speichere Zugangsdaten\n    -   `restatis::gen_auth_get()`: Lese Zugangsdaten aus\n    -   `restatis::gen_logincheck()`: Teste, ob Login funktioniert\n-   Alle Funktionen können für alle APIs genutzt werden, <br> für Teile von ihnen oder für nur eine\n-   Zugangsdaten werden lokal in einer verschlüsselten `.rds`-Datei gespeichert\n-   Schlüssel dazu wird in `.Renviron` gespeichert\n-   Zensusdatenbank akzeptiert auch API-Token\n\n## Sonstige Funktionalität: Datendownload\n\n-   `{restatis}` bietet weitere Funktionen für den Datendownload:\n    -   `gen_cube()`: Download von sogenannten Datenquadern, gibt es nur bei GENESIS und regionalstatistik.de, nicht beim Zensus 2022\n    -   `gen_list_jobs()`: Liste mit aktiven und fertiggestellten \"Jobs\", die erstellt werden, wenn Tabellen zu groß für den direkten Download sind (\"Jobs\" gibt es auch nur bei GENESIS und www.regionalstatistik.de)\n    -   `gen_download_job()`: Download von fertiggestellten \"Jobs\"\n-   Beispiel:\n\n```{r bsp_jobs, echo=TRUE, eval=TRUE, error=TRUE}\n\n# Diese Anfrage ist zu groß => Parameter job = TRUE ist nötig\nlarge_request <- restatis::gen_table(\"31111-01-02-4\", database = \"regio\")\n# large_request <- restatis::gen_table(\"31111-01-02-4\", database = \"regio\", job = TRUE)\n\n```\n\n## Sonstige Funktionalität\n\n-   Daten & Metadaten finden\n\n    -   `gen_objects2stat()`: Finde Objekte zu einer Statistik\n\n    -   `gen_objects2var()`: Finde Objekte zu einer Variablen\n\n    -   `gen_val2var()`: Extrahiere mögliche Werte einer Variablen\n\n    -   `gen_val2var2stat()`: Finde Werte einer Variable zu einer Statistik\n\n    -   `gen_search_vars()`: Suche spezifische Variablen\n\n-   Hilfsfunktionen\n\n    -   `gen_modified_data()`: Suche nach Updates, Änderungen oder neuen Objekten anhand eines spezifischen Datums\n\n    -   `gen_alternative_terms()`: Finde Suchbegriffe, die ähnlich oder verwandt sind zueinander (Schreibweise)\n\n    -   `gen_signs()`: Funktion, alle aktuellen Qualitätskennzeichen und deren Bedeutung aufzulisten (z.B., 0, \\*, X, (), p, ...)\n\n    -   `gen_update_evas()`: Funktion, um die aktuellen EVAS-Nummern von der EVAS-Seite zu scrapen\n\n## Schwesterpaket 'pystatis'\n\n<br>\n\n-   `{restatis}` verfügt über ein Python-Schwesterpaket\n-   [pystatis](https://pypi.org/project/pystatis/) ist auf PyPI zu finden\n-   Funktionalität grundsätzlich relativ ähnlich\n-   Unterstützt ebenfalls alle drei Datenbanken\n-   Die Entwicklungsversion ist auf [GitHub](https://github.com/CorrelAid/pystatis) zu finden\n\n## Danke![^1]\n\n[^1]: Diese Präsentation ist erstellt mit `Quarto` und basiert auf einer Vorlage von [Mine Cetinkaya-Rundel](https://github.com/mine-cetinkaya-rundel); Schriftart: [Fira Code Medium](https://github.com/tonsky/FiraCode).\n\n<br><br>\n\n-   `{restatis}` ist ein Open-Source-Projekt\n-   Noch kein stabiler Release (Version 0.2.0)\n-   Bitte rege benutzen und Rückmeldung geben\n-   Am besten über [GitHub](https://github.com/CorrelAid/restatis/issues)\n-   Nächste Schritte u.a.:\n    -   Umstellung von Zensusdatenbank und GENESIS zu POST (statt GET)\n\nKontakt: yannik.buhl /at/ destatis.de oder yannikbuhl (GitHub)\n","srcMarkdownNoYaml":"\n\n## Was ist `{restatis}` und was bringt es mit?\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n### Das Paket\n\n-   API-Wrapper für:\n    -   GENESIS (StBA-Datenbank)\n    -   Zensusdatenbank <br> (Zensus 2022)\n    -   www.regionalstatistik.de\n-   Entwickelt als Projekt <br> von [CorrelAid](www.correlaid.org)\n    -   Keine Zugehörigkeit zum StBA <br> oder dem Statistischen Verbund!\n    -   Erste Version 2023,<br> Update 2024\n:::\n\n::: {.column width=\"50%\"}\n### Features\n\n-   Durchsuche Datenbanken nach:\n\n    -   Tabellen & Cubes <br> (inkl. EVAS-Codes)\n    -   Metadaten, Variablen, Werte, etc.\n\n-   Datendownload <br> (Tabellen, Cubes)\n\n-   Weitere Informationen abrufbar <br> (z.B. Qualitätskennzeichen)\n\n-   Caching von API-Calls <br> mit `memoise`\n\n    -   R-Session neu starten für Reset\n:::\n:::\n\n## Installation\n\n<br>\n\n-   Installation über CRAN:\n\n```{r eval=FALSE, echo=TRUE}\n\n# CRAN-Veröffentlichung\ninstall.packages(\"restatis\")\n```\n\n<br>\n\n-   Entwicklungsversion über GitHub-Repository\n\n```{r eval=FALSE, echo=TRUE}\n# Development-Version\nremotes::install_github(\"CorrelAid/restatis\")\n```\n\n## Anwendungsbeispiel\n\n```{r echo=FALSE}\nlibrary(pacman)\npacman::p_load(dplyr, restatis, sf, ggplot2, lubridate, microplot, Cairo)\n```\n\n-   Szenario: Wir sollen eine Analyse zum Thema \"Heizungsarten\" durchführen, basierend auf der Gebäude- und Wohnungszählung (GWZ) und nutzen hierfür die Zensusdatenbank\n-   Wir suchen nach Objekten in der Zensusdatenbank zum Thema \"Heizung\" und ziehen aus der Ergebnis-Liste nur die Tabellen\n\n```{r echo=TRUE, cache=TRUE}\nrestatis::gen_find(term = \"Heizung\", \n                   database = \"zensus\", \n                   verbose = FALSE) %>% \n  magrittr::extract2(\"Tables\") %>% # restatis liefert Ergebnisse i.d.R. als Listen\n  head(2) # Nur ein Auszug aus 49 Tabellen\n\n```\n\n## Anwendungsbeispiel\n\n-   Alternativ: Suche über die `gen_catalogue()`-Funktion, Voraussetzung: Kenntnisse zu Statistik-Codes\n-   Bsp.: Gebäude-Daten beginnen mit **3**\n\n```{r eval=TRUE, echo=TRUE, cache=TRUE}\ncatalogue <- restatis::gen_catalogue(\"3*\", \n                                     database = \"zensus\", verbose = FALSE)\n\nprint(head(catalogue$Tables$`3 - Wohnen, Umwelt`, 7))\n\n```\n\n## Anwendungsbeispiel\n\n-   Nun wollen wir eine der Tabellen herunterladen (Gemeindeebene), <br> hierfür nutzen wir den `Code` der Tabelle\n\n```{r echo=TRUE, cache=TRUE}\nheizung <- restatis::gen_table(name = \"3000G-1008\", \n                               database = \"zensus\")\n\nhead(heizung, 4)\n```\n\n-   Das wollen wir nicht - es sind Daten für ganz Deutschland. Aber es scheint eine Variable mit Geo-Bezug zu geben (`GEODL1`)\n\n## Anwendungsbeispiel\n\n-   Also müssen wir sehen, welche weiteren Variablen wir noch für die Statistik (`3000G`) wählen können\n\n```{r echo=TRUE}\nheiz_vars <- restatis::gen_var2stat(code = \"3000G\", \n                                    database = \"zensus\", \n                                    verbose = FALSE)\n\nheiz_vars$Variables[11:16,]\n```\n\n## Anwendungsbeispiel\n\n-   `GEOGM4` ist die Variable, die wir gesucht haben\n-   Also nutzen wir sie über den Parameter `regionalvariable`\n\n```{r echo=TRUE, cache=TRUE}\nheizung <- restatis::gen_table(\"3000G-1008\", \n                               database = \"zensus\", \n                               regionalvariable = \"GEOGM4\",\n                               language = \"de\")\n\nhead(heizung[,9:17])\n```\n\n## Anwendungsbeispiel\n\n-   Nun kennen wir die Tabelle, die wir möchten\n-   Aber welche Informationen gibt es zu ihr?\n\n```{r echo=TRUE, eval=TRUE, cache=TRUE}\nmetadata_table <- gen_metadata(\"3000G-1011\", \n                               database = \"zensus\", category = \"table\", verbose = FALSE)\n\nprint(metadata_table$Structure$Rows)\n\nmetadata_variable <- gen_metadata(\"HZGAT1\", \n                                  database = \"zensus\", category = \"variable\", verbose = FALSE)\n\nprint(metadata_variable$General)\nprint(metadata_variable$Information)\n\n```\n\n## Anwendungsbeispiel\n\n-   Um die prozentualen Anteile der Energieträger pro Gemeinde zu bekommen, sind noch einige Verarbeitungen notwendig\n\n```{r echo=TRUE}\nheizung_filter <- heizung %>% \n                    filter(`2_variable_attribute_label` != \"Insgesamt\" & \n                           value_unit == \"%\") %>% \n                    group_by(`1_variable_attribute_code`) %>% \n                    slice_max(value, with_ties = FALSE) %>% \n                    ungroup()\n\nunique(heizung_filter$`2_variable_attribute_label`)\n\n```\n\n## Anwendungsbeispiel: Ergebnis\n\n```{r echo=FALSE, eval=TRUE, cache=TRUE}\nshp <- sf::read_sf(\"data/Shapefile_Zensus2022/EPSG_25832/VG250_GEM.shp\") %>% \n        filter(BEZ != \"Gemeindefreies Gebiet\")\n\ndf <- right_join(shp, heizung_filter,\n                 by = c(\"ARS\" = \"1_variable_attribute_code\")) %>% \n        group_by(ARS) %>% \n        slice_max(lubridate::as_date(BEGINN), with_ties = FALSE) %>% \n        ungroup()\n```\n\n```{r de_karte, eval=TRUE, dpi=1000, fig.format='CairoPNG'}\nggplot(df) +\n  geom_sf(aes(fill = `2_variable_attribute_label`)) +\n  theme_collapse() +\n  labs(title = \"Vorherrschender Energieträger pro Gemeinde\",\n       subtitle = \"Quelle: Zensus 2022\",\n       fill = \"Energieträger\") + \n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks.length = unit(0, \"pt\"), #length of tick marks\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#fff2cc\"), \n        plot.margin = margin(t = 5, l = 5, r = 0, b = 0, unit = \"mm\")) \n\n```\n\n## Authentifizierung\n\n-   Alle drei APIs benötigen Nutzeraccounts\n-   Verschiedene Funktionen zur \"Anmeldung\"\n    -   `restatis::gen_auth_save()`: Speichere Zugangsdaten\n    -   `restatis::gen_auth_get()`: Lese Zugangsdaten aus\n    -   `restatis::gen_logincheck()`: Teste, ob Login funktioniert\n-   Alle Funktionen können für alle APIs genutzt werden, <br> für Teile von ihnen oder für nur eine\n-   Zugangsdaten werden lokal in einer verschlüsselten `.rds`-Datei gespeichert\n-   Schlüssel dazu wird in `.Renviron` gespeichert\n-   Zensusdatenbank akzeptiert auch API-Token\n\n## Sonstige Funktionalität: Datendownload\n\n-   `{restatis}` bietet weitere Funktionen für den Datendownload:\n    -   `gen_cube()`: Download von sogenannten Datenquadern, gibt es nur bei GENESIS und regionalstatistik.de, nicht beim Zensus 2022\n    -   `gen_list_jobs()`: Liste mit aktiven und fertiggestellten \"Jobs\", die erstellt werden, wenn Tabellen zu groß für den direkten Download sind (\"Jobs\" gibt es auch nur bei GENESIS und www.regionalstatistik.de)\n    -   `gen_download_job()`: Download von fertiggestellten \"Jobs\"\n-   Beispiel:\n\n```{r bsp_jobs, echo=TRUE, eval=TRUE, error=TRUE}\n\n# Diese Anfrage ist zu groß => Parameter job = TRUE ist nötig\nlarge_request <- restatis::gen_table(\"31111-01-02-4\", database = \"regio\")\n# large_request <- restatis::gen_table(\"31111-01-02-4\", database = \"regio\", job = TRUE)\n\n```\n\n## Sonstige Funktionalität\n\n-   Daten & Metadaten finden\n\n    -   `gen_objects2stat()`: Finde Objekte zu einer Statistik\n\n    -   `gen_objects2var()`: Finde Objekte zu einer Variablen\n\n    -   `gen_val2var()`: Extrahiere mögliche Werte einer Variablen\n\n    -   `gen_val2var2stat()`: Finde Werte einer Variable zu einer Statistik\n\n    -   `gen_search_vars()`: Suche spezifische Variablen\n\n-   Hilfsfunktionen\n\n    -   `gen_modified_data()`: Suche nach Updates, Änderungen oder neuen Objekten anhand eines spezifischen Datums\n\n    -   `gen_alternative_terms()`: Finde Suchbegriffe, die ähnlich oder verwandt sind zueinander (Schreibweise)\n\n    -   `gen_signs()`: Funktion, alle aktuellen Qualitätskennzeichen und deren Bedeutung aufzulisten (z.B., 0, \\*, X, (), p, ...)\n\n    -   `gen_update_evas()`: Funktion, um die aktuellen EVAS-Nummern von der EVAS-Seite zu scrapen\n\n## Schwesterpaket 'pystatis'\n\n<br>\n\n-   `{restatis}` verfügt über ein Python-Schwesterpaket\n-   [pystatis](https://pypi.org/project/pystatis/) ist auf PyPI zu finden\n-   Funktionalität grundsätzlich relativ ähnlich\n-   Unterstützt ebenfalls alle drei Datenbanken\n-   Die Entwicklungsversion ist auf [GitHub](https://github.com/CorrelAid/pystatis) zu finden\n\n## Danke![^1]\n\n[^1]: Diese Präsentation ist erstellt mit `Quarto` und basiert auf einer Vorlage von [Mine Cetinkaya-Rundel](https://github.com/mine-cetinkaya-rundel); Schriftart: [Fira Code Medium](https://github.com/tonsky/FiraCode).\n\n<br><br>\n\n-   `{restatis}` ist ein Open-Source-Projekt\n-   Noch kein stabiler Release (Version 0.2.0)\n-   Bitte rege benutzen und Rückmeldung geben\n-   Am besten über [GitHub](https://github.com/CorrelAid/restatis/issues)\n-   Nächste Schritte u.a.:\n    -   Umstellung von Zensusdatenbank und GENESIS zu POST (statt GET)\n\nKontakt: yannik.buhl /at/ destatis.de oder yannikbuhl (GitHub)\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","include-in-header":[{"text":"<style type=\"text/css\">\nul li ul li {\n  font-size: 0.8em;\n}\n\n.figure {\nmargin: 0 !important;\n}\n\n</style>\n"}],"highlight-style":"ayu-mirage","output-file":"presentation-restatis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.555","auto-stretch":true,"editor":"visual","title":"{restatis}","subtitle":"Ein Softwarepaket für R zur Arbeit mit Zensusdatenbank, GENESIS und regionalstatistik.de","author":"Yannik Buhl, Statistisches Bundesamt","institute":"Statistische Woche 2024, Regensburg","multiplex":true,"theme":["pp.scss"],"slideNumber":"c/t","fontcolor":"#262d36","height":900,"width":1600}}},"projectFormats":["html"]}